<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:NeumorphismUI"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <!-- The colors-->
    <Color x:Key="LightShadow">#ffffff</Color>
    <SolidColorBrush x:Key="LightShadowBrush" Color="{DynamicResource LightShadow}"/>

    <Color x:Key="DarkShadow">#FFA3B1C6</Color>
    <SolidColorBrush x:Key="DarkShadowBrush" Color="{DynamicResource DarkShadow}"/>

    <Color x:Key="MainBackGround">#E0E5EC</Color>
    <SolidColorBrush x:Key="MainBackGroundBrush" Color="{DynamicResource MainBackGround}"/>

    <Color x:Key="MainForeGround">#7E8A98</Color>
    <SolidColorBrush x:Key="MainForeGroundBrush" Color="{DynamicResource MainForeGround}"/>

    <!-- Shadow properties -->
    <system:Double x:Key="ShadowDepth">8</system:Double>
    <system:Double x:Key="BlurRadius">18</system:Double>

    <!-- Button style -->
    <Style x:Key="NeumorphismButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource MainBackGroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource MainForeGroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid x:Name="container" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">

                        <ContentControl x:Name="normalBackground">
                            <Border CornerRadius="5" >

                                <Border.Effect>
                                    <DropShadowEffect Direction="135" Color="{DynamicResource LightShadow}" ShadowDepth="{StaticResource ShadowDepth}" BlurRadius="{StaticResource BlurRadius}"/>
                                </Border.Effect>
                                <Border CornerRadius="5" Background="{TemplateBinding Background}">
                                    <Border.Effect>
                                        <DropShadowEffect Color="{DynamicResource DarkShadow}" ShadowDepth="{StaticResource ShadowDepth}" BlurRadius="{StaticResource BlurRadius}"/>
                                    </Border.Effect>
                                    

                                </Border>
                            </Border>
                        </ContentControl>

                        <ContentControl x:Name="pressedBackground" Visibility="Hidden">
                            <Grid Background="{TemplateBinding Background}"  Margin="-6">
                                <Grid.Clip >
                                    <RectangleGeometry RadiusX="5" RadiusY="5" Rect="{Binding ElementName=container, Converter={local:WidthHeightToRectangleConverter}, Mode=OneWay}"/>
                                </Grid.Clip>
                                <Rectangle Stroke="{TemplateBinding Background}" StrokeThickness="4" >
                                    <Rectangle.Effect>
                                        <DropShadowEffect Color="{DynamicResource DarkShadow}" ShadowDepth="{StaticResource ShadowDepth}" BlurRadius="{StaticResource BlurRadius}"/>
                                    </Rectangle.Effect>


                                </Rectangle>
                                <Rectangle Stroke="{TemplateBinding Background}" StrokeThickness="6" >
                                    <Rectangle.Effect>
                                        <DropShadowEffect Direction="135" Color="{DynamicResource LightShadow}" ShadowDepth="{StaticResource ShadowDepth}" BlurRadius="{StaticResource BlurRadius}"/>
                                    </Rectangle.Effect>

                                </Rectangle>
                            </Grid>
                        </ContentControl>

                        <Border x:Name="border" CornerRadius="5" BorderThickness="0.1">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <LinearGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                            <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                            <RotateTransform Angle="-47.291" CenterY="0.5" CenterX="0.5"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </LinearGradientBrush.RelativeTransform>
                                    <GradientStop  Color="{DynamicResource DarkShadow}" Offset="0"/>
                                    <GradientStop  Color="{DynamicResource LightShadow}" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsDefaulted" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Background" TargetName="border" Value="white"/>
                                        </Trigger>-->

                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="normalBackground" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="pressedBackground" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="border" Property="BorderBrush">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <LinearGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                                <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                                <RotateTransform Angle="-47.291" CenterY="0.5" CenterX="0.5"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </LinearGradientBrush.RelativeTransform>
                                        <GradientStop  Color="{DynamicResource DarkShadow}" Offset="1"/>
                                        <GradientStop  Color="{DynamicResource LightShadow}" Offset="0"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                          
                        </Trigger>

                        <!--<Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Background" TargetName="border" Value="#7E8A98"/>
                                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="Gray"/>
                                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>